{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","evt","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAYeA,G,YARF,SAACC,GAAD,OACT,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCHbC,G,MAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEED,EAAMS,SAASC,KAAI,SAACN,GAAD,OACjB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLlBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAC,KAAK,SACLb,UAAU,SACVW,YAAaA,EACbG,SAAUF,MCmCCG,E,kDAtCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALJ,E,gEASQ,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CAACf,SAASc,S,+BAKpB,IAAD,SAE2BE,KAAKR,MAA/BR,EAFD,EAECA,SAAUS,EAFX,EAEWA,YAEZQ,EAAmBjB,EAASkB,QAAO,SAACvB,GAAD,OAAaA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAEtG,OACE,sBAAK3B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAAiB,GAAG,OAAI,EAAKN,SAAS,CAACN,YAAaY,EAAIC,OAAOC,WAE7D,cAAC,EAAD,CAAUvB,SAAUiB,W,GAjCXO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.870afd72.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.css';\r\n\r\nconst Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h1>{props.monster.name}</h1>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../card/card';\r\n\r\nimport './card-list.css'\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>\r\n        {\r\n          props.monsters.map((monster) => (\r\n            <Card key={monster.id} monster={monster} />\r\n          ))\r\n        }\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nimport './search-box.css'\r\n\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n    type='search' \r\n    className='search'\r\n    placeholder={placeholder} \r\n    onChange={handleChange}\r\n    />\r\n)\r\n\r\n","import React, {Component} from 'react'\nimport './App.css';\nimport { CardList } from './components/card-list/card-list';\nimport { SearchBox } from './components/search-box/search-box';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [ ],\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => {\n        this.setState({monsters:users})\n      });\n  }\n\n\n  render() {\n\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox  \n          placeholder='search monsters'\n          handleChange={evt => this.setState({searchField: evt.target.value})}\n        />\n         <CardList monsters={filteredMonsters} />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}